stages:
    - build
    - deploy
    - play

cache:
    key: ${CI_PROJECT_ID}
    paths:
        - .gradle/

release_github:
    dependencies:
        - build
    only:
        - master
    stage: deploy
    script:
        - git push --set-upstream https://${github_key}@github.com/SilverBlog/SilverBlog_Android.git HEAD:master
        - /opt/github-release-upload.sh github_api_token=${github_key} owner=silverblog repo=SilverBlog_Android tag=$(date "+%Y%m%d%H%M%S") filename="./app/build/outputs/apk/release/app-release.apk" pre_release="false"
        - git clone https://git.reallserver.cn/qwe7002/telegram-sms.wiki.git wiki


build:
    image: preventis/docker-android-alpine:latest
    stage: build
    script:
        - curl https://keystore.reallserver.cn/android/silverblog/keys.jks -o app/keys.jks -u gitlab:${key_store_passwd}
        - export GRADLE_USER_HOME=$(pwd)/.gradle && mkdir -p $(pwd)/.gradle
        - echo "org.gradle.daemon=true org.gradle.parallel=true" >> $(pwd)/.gradle/gradle.properties
        - echo -e "ext {\n appVersionCode = ${CI_PIPELINE_ID}\n appVersionName = \"${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}\"}" > ./app/version.gradle
        - echo -e "systemProp.http.nonProxyHosts=dl.google.com\n systemProp.http.proxyHost=192.168.3.8\n systemProp.http.proxyPort=1080\n systemProp.https.proxyHost=192.168.3.8\n systemProp.https.proxyPort=1080\n org.gradle.jvmargs=-Xmx1536m\n android.enableJetifier=true\n android.useAndroidX=true" >> gradle.properties
        - chmod +x ./gradlew
        - ./gradlew assembleRelease
    artifacts:
        paths:
            - app/build/outputs/apk/release/app-release.apk
        expire_in: 1 week

release_play_build_develop:
    image: preventis/docker-android-alpine:latest
    stage: play
    only:
        - nightly
    script:
        - curl https://keystore.reallserver.cn/android/silverblog/keys.jks -o app/keys.jks -u gitlab:${key_store_passwd}
        - curl https://keystore.reallserver.cn/android/play-service-key.json -o app/play-service-key.json -u gitlab:${key_store_passwd}
        - export GRADLE_USER_HOME=$(pwd)/.gradle && mkdir -p $(pwd)/.gradle
        - echo "org.gradle.daemon=true org.gradle.parallel=true" >> $(pwd)/.gradle/gradle.properties
        - echo -e "ext {\n appVersionCode = ${CI_PIPELINE_ID}\n appVersionName = \"${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}\"}" > ./app/version.gradle
        - echo -e "systemProp.http.nonProxyHosts=dl.google.com\n systemProp.http.proxyHost=192.168.3.8\n systemProp.http.proxyPort=1080\n systemProp.https.proxyHost=192.168.3.8\n systemProp.https.proxyPort=1080\n org.gradle.jvmargs=-Xmx1536m\n android.enableJetifier=true\n android.useAndroidX=true" >> gradle.properties
        - chmod +x ./gradlew
        - ./gradlew publishApk --track beta

release_play_build_master:
    image: preventis/docker-android-alpine:latest
    stage: play
    only:
        - master
    script:
        - curl https://keystore.reallserver.cn/android/silverblog/keys.jks -o app/keys.jks -u gitlab:${key_store_passwd}
        - curl https://keystore.reallserver.cn/android/play-service-key.json -o app/play-service-key.json -u gitlab:${key_store_passwd}
        - export GRADLE_USER_HOME=$(pwd)/.gradle && mkdir -p $(pwd)/.gradle
        - echo "org.gradle.daemon=true org.gradle.parallel=true" >> $(pwd)/.gradle/gradle.properties
        - echo -e "ext {\n appVersionCode = ${CI_PIPELINE_ID}\n appVersionName = \"${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}\"}" > ./app/version.gradle
        - echo -e "systemProp.http.nonProxyHosts=dl.google.com\n systemProp.http.proxyHost=192.168.3.8\n systemProp.http.proxyPort=1080\n systemProp.https.proxyHost=192.168.3.8\n systemProp.https.proxyPort=1080\n org.gradle.jvmargs=-Xmx1536m\n android.enableJetifier=true\n android.useAndroidX=true" >> gradle.properties
        - chmod +x ./gradlew
        - ./gradlew publishApk --track production
